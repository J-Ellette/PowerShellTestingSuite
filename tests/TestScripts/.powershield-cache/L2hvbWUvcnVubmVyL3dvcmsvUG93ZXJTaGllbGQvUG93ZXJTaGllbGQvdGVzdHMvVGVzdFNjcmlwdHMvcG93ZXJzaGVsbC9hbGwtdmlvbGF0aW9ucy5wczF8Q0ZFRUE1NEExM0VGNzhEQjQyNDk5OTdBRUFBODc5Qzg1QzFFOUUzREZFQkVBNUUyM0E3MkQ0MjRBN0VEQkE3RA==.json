{
  "Timestamp": "2025-10-25T17:22:19.5649136Z",
  "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
  "FileHash": "CFEEA54A13EF78DB4249997AEAA879C85C1E9E3DFEBEA5E23A72D424A7EDBA7D",
  "Result": {
    "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
    "Violations": [
      {
        "Name": "InsecureHashAlgorithms",
        "Message": "Insecure hash algorithm 'MD5' detected. Use SHA-256 or higher.",
        "Description": null,
        "Severity": 3,
        "LineNumber": 4,
        "Code": "Get-FileHash -Path \"file.txt\" -Algorithm MD5",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
        "RuleId": "InsecureHashAlgorithms",
        "Metadata": {}
      },
      {
        "Name": "InsecureHashAlgorithms",
        "Message": "Insecure hash algorithm 'SHA1' detected. Use SHA-256 or higher.",
        "Description": null,
        "Severity": 3,
        "LineNumber": 18,
        "Code": "Get-FileHash -Path \"data.bin\" -Algorithm SHA1",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
        "RuleId": "InsecureHashAlgorithms",
        "Metadata": {}
      },
      {
        "Name": "CredentialExposure",
        "Message": "Plaintext password conversion detected. Use Read-Host -AsSecureString instead.",
        "Description": null,
        "Severity": 4,
        "LineNumber": 7,
        "Code": "ConvertTo-SecureString \"Password123\" -AsPlainText -Force",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
        "RuleId": "CredentialExposure",
        "Metadata": {}
      },
      {
        "Name": "CommandInjection",
        "Message": "Potential command injection via Invoke-Expression with variables",
        "Description": null,
        "Severity": 4,
        "LineNumber": 11,
        "Code": "Invoke-Expression $cmd",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
        "RuleId": "CommandInjection",
        "Metadata": {}
      },
      {
        "Name": "CertificateValidation",
        "Message": "Certificate validation callback set to always return true - bypasses certificate security",
        "Description": null,
        "Severity": 3,
        "LineNumber": 14,
        "Code": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/all-violations.ps1",
        "RuleId": "CertificateValidation",
        "Metadata": {}
      }
    ],
    "ParseErrors": [],
    "RulesExecuted": 52,
    "Timestamp": "2025-10-25T17:22:19.5641521+00:00"
  }
}
