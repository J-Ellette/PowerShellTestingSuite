{
  "Timestamp": "2025-10-25T17:22:33.0764940Z",
  "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
  "FileHash": "8ACB6A8E24D8E96D9FBA7C5F17052176FDF4A7848F58A6F5B526C722E5AF9066",
  "Result": {
    "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
    "Violations": [
      {
        "Name": "DeprecatedCmdletUsage",
        "Message": "Using deprecated WMI cmdlet 'Get-WmiObject'. Use CIM cmdlet 'Get-CimObject' instead.",
        "Description": null,
        "Severity": 2,
        "LineNumber": 13,
        "Code": "Get-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "DeprecatedCmdletUsage",
        "Metadata": {}
      },
      {
        "Name": "DeprecatedCmdletUsage",
        "Message": "Using deprecated WMI cmdlet 'Get-WmiObject'. Use CIM cmdlet 'Get-CimObject' instead.",
        "Description": null,
        "Severity": 2,
        "LineNumber": 94,
        "Code": "Get-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "DeprecatedCmdletUsage",
        "Metadata": {}
      },
      {
        "Name": "DeprecatedCmdletUsage",
        "Message": "Using deprecated WMI cmdlet 'Invoke-WmiMethod'. Use CIM cmdlet 'Invoke-CimMethod' instead.",
        "Description": null,
        "Severity": 2,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "DeprecatedCmdletUsage",
        "Metadata": {}
      },
      {
        "Name": "PersistenceMechanismDetection",
        "Message": "Scheduled task creation detected. Verify this is legitimate - scheduled tasks are used for persistence. MITRE ATT&CK: T1053.005 (Scheduled Task).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 22,
        "Code": "New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "PersistenceMechanismDetection",
        "Metadata": {}
      },
      {
        "Name": "PersistenceMechanismDetection",
        "Message": "Scheduled task creation detected. Verify this is legitimate - scheduled tasks are used for persistence. MITRE ATT&CK: T1053.005 (Scheduled Task).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 24,
        "Code": "Register-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "PersistenceMechanismDetection",
        "Metadata": {}
      },
      {
        "Name": "PersistenceMechanismDetection",
        "Message": "Scheduled task creation detected. Verify this is legitimate - scheduled tasks are used for persistence. MITRE ATT&CK: T1053.005 (Scheduled Task).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 27,
        "Code": "schtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "PersistenceMechanismDetection",
        "Metadata": {}
      },
      {
        "Name": "PersistenceMechanismDetection",
        "Message": "Windows service creation/modification detected. Services are used for system-level persistence. MITRE ATT&CK: T1543.003 (Windows Service).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 62,
        "Code": "New-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "PersistenceMechanismDetection",
        "Metadata": {}
      },
      {
        "Name": "CredentialHarvestingDetection",
        "Message": "Mimikatz-related keyword detected: 'mimikatz'. This tool is used for credential dumping. MITRE ATT&CK: T1003.001 (LSASS Memory).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "Invoke-Mimikatz",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "CredentialHarvestingDetection",
        "Metadata": {}
      },
      {
        "Name": "CredentialHarvestingDetection",
        "Message": "Mimikatz-related keyword detected: 'sekurlsa'. This tool is used for credential dumping. MITRE ATT&CK: T1003.001 (LSASS Memory).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "CredentialHarvestingDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM execution detected. This is used to run commands on remote systems. MITRE ATT&CK: T1021.006 (Remote Services: Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM execution detected. This is used to run commands on remote systems. MITRE ATT&CK: T1021.006 (Remote Services: Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 10,
        "Code": "Invoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM query detected. Verify this is legitimate reconnaissance. MITRE ATT&CK: T1047 (Windows Management Instrumentation).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 13,
        "Code": "Get-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM query detected. Verify this is legitimate reconnaissance. MITRE ATT&CK: T1047 (Windows Management Instrumentation).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 16,
        "Code": "Get-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM execution detected. This is used to run commands on remote systems. MITRE ATT&CK: T1021.006 (Remote Services: Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 87,
        "Code": "Get-CimInstance -ClassName Win32_Process -CimSession $cimSession",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote WMI/CIM query detected. Verify this is legitimate reconnaissance. MITRE ATT&CK: T1047 (Windows Management Instrumentation).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 94,
        "Code": "Get-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote scheduled task creation detected. This technique is used for remote code execution and persistence. MITRE ATT&CK: T1053.005 (Scheduled Task), T1021 (Remote Services).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 24,
        "Code": "Register-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote scheduled task creation detected. This technique is used for remote code execution and persistence. MITRE ATT&CK: T1053.005 (Scheduled Task), T1021 (Remote Services).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 27,
        "Code": "schtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "SMB share enumeration detected. This is used to discover network shares for lateral movement. MITRE ATT&CK: T1135 (Network Share Discovery).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 30,
        "Code": "net view \\\\target-server",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "SMB share enumeration detected. This is used to discover network shares for lateral movement. MITRE ATT&CK: T1135 (Network Share Discovery).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 31,
        "Code": "net share \\\\remote-host",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "SMB share enumeration detected. This is used to discover network shares for lateral movement. MITRE ATT&CK: T1135 (Network Share Discovery).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 37,
        "Code": "net use \\\\target-server\\C$ /user:domain\\admin password",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 9,
        "Code": "New-CimSession -ComputerName \"remote-host\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 40,
        "Code": "New-PSSession -ComputerName \"target-host\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 44,
        "Code": "Enter-PSSession -ComputerName \"remote-server\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 47,
        "Code": "Invoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 86,
        "Code": "New-CimSession -ComputerName \"target\" -Credential $cred",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PowerShell remoting to remote systems detected. Verify this is authorized. MITRE ATT&CK: T1021.006 (Windows Remote Management).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 91,
        "Code": "Invoke-Command -ComputerName $computers -ScriptBlock { hostname }",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-Mimikatz.*pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 1,
        "Code": "# PowerShield Test Script: Lateral Movement Detection\n# This script contains intentional lateral movement patterns for testing Rule 51\n# MITRE ATT&CK: T1021 (Remote Services), T1570 (Lateral Tool Transfer), T1135 (Network Share Discovery)\n\n# Test 1: Remote WMI execution (Critical)\nInvoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"\n",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-Mimikatz.*pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-Mimikatz.*pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "Invoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-Mimikatz.*pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "Invoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: sekurlsa::pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 1,
        "Code": "# PowerShield Test Script: Lateral Movement Detection\n# This script contains intentional lateral movement patterns for testing Rule 51\n# MITRE ATT&CK: T1021 (Remote Services), T1570 (Lateral Tool Transfer), T1135 (Network Share Discovery)\n\n# Test 1: Remote WMI execution (Critical)\nInvoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"\n",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: sekurlsa::pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: sekurlsa::pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "Invoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: sekurlsa::pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "Invoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: sekurlsa::pth. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 50,
        "Code": "'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-SMBExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 1,
        "Code": "# PowerShield Test Script: Lateral Movement Detection\n# This script contains intentional lateral movement patterns for testing Rule 51\n# MITRE ATT&CK: T1021 (Remote Services), T1570 (Lateral Tool Transfer), T1135 (Network Share Discovery)\n\n# Test 1: Remote WMI execution (Critical)\nInvoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"\n",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-SMBExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-SMBExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 56,
        "Code": "Invoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-SMBExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 56,
        "Code": "Invoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-SMBExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 56,
        "Code": "Invoke-SMBExec",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-WMIExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 1,
        "Code": "# PowerShield Test Script: Lateral Movement Detection\n# This script contains intentional lateral movement patterns for testing Rule 51\n# MITRE ATT&CK: T1021 (Remote Services), T1570 (Lateral Tool Transfer), T1135 (Network Share Discovery)\n\n# Test 1: Remote WMI execution (Critical)\nInvoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"\n",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-WMIExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-WMIExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 53,
        "Code": "Invoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-WMIExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 53,
        "Code": "Invoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-WMIExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 53,
        "Code": "Invoke-WMIExec",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-PSExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 1,
        "Code": "# PowerShield Test Script: Lateral Movement Detection\n# This script contains intentional lateral movement patterns for testing Rule 51\n# MITRE ATT&CK: T1021 (Remote Services), T1570 (Lateral Tool Transfer), T1135 (Network Share Discovery)\n\n# Test 1: Remote WMI execution (Critical)\nInvoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"\n",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-PSExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 6,
        "Code": "Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList \"cmd.exe /c calc.exe\" -ComputerName \"target-server\" -Credential $cred\n\n# Test 2: Remote CIM execution (Critical)\n$session = New-CimSession -ComputerName \"remote-host\"\nInvoke-CimMethod -ClassName Win32_Process -MethodName Create -Arguments @{CommandLine=\"powershell.exe\"} -CimSession $session\n\n# Test 3: WMI remote query (High)\nGet-WmiObject -Class Win32_Service -ComputerName \"target-pc\" -Credential $cred\n\n# Test 4: Get-CimInstance remote (High)\nGet-CimInstance -ClassName Win32_LogicalDisk -ComputerName \"remote-server\" -CimSession $session\n\n# Test 5: wmic remote execution (Critical)\nwmic /node:\"target-host\" process call create \"cmd.exe /c malware.exe\"\n\n# Test 6: Remote scheduled task (Critical)\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-File C:\\evil.ps1\"\n$trigger = New-ScheduledTaskTrigger -AtLogon\nRegister-ScheduledTask -TaskName \"RemoteBackdoor\" -Action $action -Trigger $trigger -ComputerName \"target-server\"\n\n# Test 7: schtasks remote (Critical)\nschtasks /create /tn \"EvilTask\" /tr \"C:\\backdoor.exe\" /sc onlogon /s target-host /u admin /p password\n\n# Test 8: SMB share enumeration (High)\nnet view \\\\target-server\nnet share \\\\remote-host\n\n# Test 9: Get-SmbShare remote (High)\nGet-SmbShare -CimSession $remoteSession\n\n# Test 10: net use mapping (High)\nnet use \\\\target-server\\C$ /user:domain\\admin password\n\n# Test 11: PSSession creation (Critical)\n$session = New-PSSession -ComputerName \"target-host\" -Credential $cred\nInvoke-Command -Session $session -ScriptBlock { whoami }\n\n# Test 12: Enter-PSSession (High)\nEnter-PSSession -ComputerName \"remote-server\" -Credential $cred\n\n# Test 13: Invoke-Command remote (Critical)\nInvoke-Command -ComputerName \"target1\",\"target2\" -ScriptBlock { Get-Process } -Credential $cred\n\n# Test 14: Pass-the-Hash pattern (Critical)\nInvoke-Mimikatz -Command 'sekurlsa::pth /user:admin /domain:company.com /ntlm:hash'\n\n# Test 15: Invoke-WMIExec (Critical)\nInvoke-WMIExec -Target 192.168.1.10 -Username admin -Hash NTLMHASH -Command \"cmd /c calc\"\n\n# Test 16: Invoke-SMBExec (Critical)\nInvoke-SMBExec -Target target-host -Username admin -Hash hash -Command \"powershell.exe\"\n\n# Test 17: Invoke-PSExec pattern (Critical)\nInvoke-PSExec -ComputerName target-server -Command \"cmd.exe\"\n\n# Test 18: Remote service creation (Critical)\nNew-Service -Name \"EvilSvc\" -BinaryPathName \"C:\\backdoor.exe\" -ComputerName \"remote-host\"\n\n# Test 19: sc.exe remote (Critical)\nsc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto\n\n# Test 20: Remote registry access (High)\nGet-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"\n\n# Test 21: reg query remote (High)\nreg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n# Test 22: reg add remote (High)\nreg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value\n\n# Test 23: PsExec reference (Critical)\n$tool = \"psexec.exe \\\\target -u admin -p pass cmd.exe\"\n\n# Test 24: paexec usage (Critical)\n$cmd = \"paexec.exe \\\\remote-host cmd.exe\"\n\n# Test 25: remcom tool (Critical)\n$remoteCmd = \"remcom \\\\target-server cmd.exe\"\n\n# Test 26: CIM session with credential (Critical)\n$cimSession = New-CimSession -ComputerName \"target\" -Credential $cred\nGet-CimInstance -ClassName Win32_Process -CimSession $cimSession\n\n# Test 27: Multiple computer names (High)\n$computers = @(\"server1\", \"server2\", \"server3\")\nInvoke-Command -ComputerName $computers -ScriptBlock { hostname }\n\n# Test 28: WMI namespace root\\cimv2 remote (High)\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem -ComputerName target-host\n\nWrite-Host \"Lateral movement detection test complete\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-PSExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 59,
        "Code": "Invoke-PSExec -ComputerName target-server -Command \"cmd.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-PSExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 59,
        "Code": "Invoke-PSExec -ComputerName target-server -Command \"cmd.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Pass-the-Hash technique detected: Invoke-PSExec. This is an advanced attack for lateral movement. MITRE ATT&CK: T1550.002 (Pass the Hash).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 59,
        "Code": "Invoke-PSExec",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote service creation detected. Services are used to execute code on remote systems. MITRE ATT&CK: T1543.003 (Windows Service), T1021.002 (SMB/Windows Admin Shares).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 65,
        "Code": "sc \\\\target-server create BackdoorService binpath= \"C:\\malware\\evil.exe\" start= auto",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote registry access detected. This can be used for reconnaissance and persistence. MITRE ATT&CK: T1021.002 (SMB/Windows Admin Shares).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 68,
        "Code": "Get-ItemProperty -Path \"\\\\remote-server\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote registry access detected. This can be used for reconnaissance and persistence. MITRE ATT&CK: T1021.002 (SMB/Windows Admin Shares).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 71,
        "Code": "reg query \\\\target-host\\HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "Remote registry access detected. This can be used for reconnaissance and persistence. MITRE ATT&CK: T1021.002 (SMB/Windows Admin Shares).",
        "Description": null,
        "Severity": 3,
        "LineNumber": 74,
        "Code": "reg add \\\\remote-server\\HKLM\\Software\\Backdoor /v Key /t REG_SZ /d Value",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PsExec-style tool reference detected. These tools enable remote command execution. MITRE ATT&CK: T1569.002 (Service Execution).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 59,
        "Code": "Invoke-PSExec",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PsExec-style tool reference detected. These tools enable remote command execution. MITRE ATT&CK: T1569.002 (Service Execution).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 77,
        "Code": "\"psexec.exe \\\\target -u admin -p pass cmd.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PsExec-style tool reference detected. These tools enable remote command execution. MITRE ATT&CK: T1569.002 (Service Execution).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 80,
        "Code": "\"paexec.exe \\\\remote-host cmd.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      },
      {
        "Name": "LateralMovementDetection",
        "Message": "PsExec-style tool reference detected. These tools enable remote command execution. MITRE ATT&CK: T1569.002 (Service Execution).",
        "Description": null,
        "Severity": 4,
        "LineNumber": 83,
        "Code": "\"remcom \\\\target-server cmd.exe\"",
        "FilePath": "/home/runner/work/PowerShield/PowerShield/tests/TestScripts/powershell/lateral-movement.ps1",
        "RuleId": "LateralMovementDetection",
        "Metadata": {}
      }
    ],
    "ParseErrors": [],
    "RulesExecuted": 52,
    "Timestamp": "2025-10-25T17:22:33.0761487+00:00"
  }
}
